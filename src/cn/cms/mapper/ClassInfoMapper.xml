<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cms.mapper.ClassInfoMapper">
  <resultMap id="BaseResultMap" type="cn.cms.po.ClassInfo">
    <id column="ciid" jdbcType="INTEGER" property="ciid" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="classs" jdbcType="VARCHAR" property="classs" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="countPeople" jdbcType="INTEGER" property="countpeople" />
    <result column="info" jdbcType="VARCHAR" property="info" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ciid, tid, classs, teacher, countPeople, info
  </sql>
  <select id="selectByExample" parameterType="cn.cms.po.ClassInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class_info
    where ciid = #{ciid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from class_info
    where ciid = #{ciid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.cms.po.ClassInfoExample">
    delete from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.cms.po.ClassInfo">
    insert into class_info (ciid, tid, classs, 
      teacher, countPeople, info
      )
    values (#{ciid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{classs,jdbcType=VARCHAR}, 
      #{teacher,jdbcType=VARCHAR}, #{countpeople,jdbcType=INTEGER}, #{info,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.cms.po.ClassInfo">
    insert into class_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ciid != null">
        ciid,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="classs != null">
        classs,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="countpeople != null">
        countPeople,
      </if>
      <if test="info != null">
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ciid != null">
        #{ciid,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="classs != null">
        #{classs,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="countpeople != null">
        #{countpeople,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.cms.po.ClassInfoExample" resultType="java.lang.Long">
    select count(*) from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update class_info
    <set>
      <if test="record.ciid != null">
        ciid = #{record.ciid,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.classs != null">
        classs = #{record.classs,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null">
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.countpeople != null">
        countPeople = #{record.countpeople,jdbcType=INTEGER},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update class_info
    set ciid = #{record.ciid,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      classs = #{record.classs,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      countPeople = #{record.countpeople,jdbcType=INTEGER},
      info = #{record.info,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cms.po.ClassInfo">
    update class_info
    <set>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="classs != null">
        classs = #{classs,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="countpeople != null">
        countPeople = #{countpeople,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
    </set>
    where ciid = #{ciid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cms.po.ClassInfo">
    update class_info
    set tid = #{tid,jdbcType=INTEGER},
      classs = #{classs,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      countPeople = #{countpeople,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR}
    where ciid = #{ciid,jdbcType=INTEGER}
  </update>

  <select id="selectAllClassInfo" parameterType="page" resultType="classInfo">
    select * from class_info
  </select>
</mapper>